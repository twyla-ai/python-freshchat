[tool.poetry]
name = "freshchat"
packages = [
    { include = "freshchat", from = "src" },
]
version = "0.6.1-alpha.0"
description = "A library provide a http client for Freshchat API"
authors = [
    "Twyla Engineering <software@twyla.ai>",
    "Maria Soulountsi <mariasoul01@gmail.com>"
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/twyla-ai/python-freshchat"
keywords = []
classifiers = []

[tool.poetry.dependencies]
python = "^3.7"
cafeteria = ">=0.19.0"
aiohttp = "^3.6"
pycrypto = "^2.6"

[tool.poetry.dev-dependencies]
pre-commit = "^2.7"
flake8 = "^3.8"
coverage = {version = "^5.2", extras = ["toml"]}
black = "^22.3"
tox = "^3.20"
pytest = "^6.0"
aioresponses = "^0.7"
pytest-asyncio = "^0.15"
pytest-cov = "^2.10"

[tool.tox]
legacy_tox_ini = """
[tox]
minversion = 3.13.0
isolated_build = True
envlist = clean,report,py37,py38

[testenv]
whitelist_externals =
    poetry
setenv =
    COVERAGE_FILE=.coverage/data.{envname}
depends =
    {py37,py38}: clean
    report: py37,py38
commands =
    poetry install -v --no-root
    pytest --cov --cov-append --cov-report=term {posargs}

[testenv:report]
deps = coverage[toml]
skip_install = true
setenv =
    COVERAGE_FILE=.coverage/data
commands =
    coverage combine
    coverage report
    coverage html

[testenv:clean]
deps = coverage[toml]
skip_install = true
setenv =
    COVERAGE_FILE=.coverage/data
commands = coverage erase

[testenv:doc]
skip_install = true
deps =
    -rdocs/requirements.txt
commands =
    pip install --use-pep517 .
    sphinx-build -T -E \
        -b readthedocs \
        -d docs/_build/doctrees-readthedocs \
        -D language=en \
        docs/ docs/_build/html
"""

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
parallel = true
data_file = ".coverage/data"
source = [
    "freshchat",
]
omit = [
    "tests/*",
]

[tool.coverage.paths]
source = [
    "src",
    "*/site-packages"
]

[tool.coverage.report]
skip_empty = true
ignore_errors = true

# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.coverage.html]
directory = ".coverage/html"

[tool.coverage.xml]
output = ".coverage/coverage.xml"

[tool.coverage.json]
output = ".coverage/coverage.json"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
src_paths = ["src", "test"]
known_first_party = "freshchat"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
